Global:
  use_gpu: True
  distributed: True
  use_amp: False      # if use amp, set distributed False
  seed: 2022
  epoch_num: 300
  log_smooth_window: 20
  print_batch_step: 20
  save_model_dir: ./output/det/det_r50_pse/
  ckpt_save_type: HighestAcc   # HighestAcc：只保存最高准确率模型 ；FixedEpochStep：每隔ckpt_save_epoch个epoch保存一个
  save_epoch_step: 100
  # evaluation is run every 1 epoch
  eval_epoch_step: [0, 1]
  cal_metric_during_train: False
  pretrained_model:     # finetune
  checkpoints:          # resume
  use_tensorboard: True

Architecture:
  model_type: det
  algorithm: PSE
  Transform:
  Backbone:
    name: ResNet
    layers: 50
    mode_3x3: False
    pretrained: True
    ckpt_path: .../model_zoo/resnet50-19c8e357.pth
  Neck:
    name: FPN
    out_channels: 256
  Head:
    name: PSEHead
    hidden_dim: 256
    out_channels: 7  # num of kenerls

Loss:
  name: PSELoss
  alpha: 0.7
  ohem_ratio: 3
  kernel_sample_mask: pred
  reduction: mean

Optimizer:
  base_lr: 0.001
  optim:
    name: Adam  # torch.optim
    betas: !!python/tuple [0.9, 0.999]
    weight_decay: 0
    amsgrad: True  # refer DBNet.pytorch
  lr_decay:
    name: WarmupPolyLR
    warmup_epoch: 3
    power: 0.9

PostProcess:
  name: PSEPostProcess
  thresh: 0
  box_thresh: 0.85
  min_area: 16
  scale: 1
  out_polygon: False  # "box" or "poly"

Metric:
  name: DetMetric
  main_indicator: hmean

Train:
  dataset:
    name: SimpleDataSet
    label_file_list:
      - .../文本检测数据集1/train_label.txt
      - .../文本检测数据集2/train_label.txt
      - .../文本检测数据集3/train_label.txt
    ratio_list: 1.0 #[1.0, 0.8, 0.5]
    transforms:
      - DecodeImage: # load image
          img_mode: RGB
          channel_first: False
      - DetLabelEncode: # Class handling label
          ignore_txt: ["###", "#####"]    # ["*", "###"]
      - ColorJitter:
          brightness: 0.12549019607843137
          saturation: 0.5
      - IaaAugment:
          augmenter_args:
            - {"type": Resize, "args": {"size": [0.5, 3]}}
            - {"type": Fliplr, "args": {"p": 0.5}}
            - {"type": Affine, "args": {"rotate": [-10, 10]}}
      - MakePseGt:
          kernel_num: 7
          min_shrink_ratio: 0.4
          size: 640
      - RandomCropImgMask:
          size: [640, 640]
          main_key: gt_text
          crop_keys: ["image", "gt_text", "gt_kernels", "mask"]
      - ToTensor: # 包含/255、ToCHWImage、ToTensor功能
      - Normalize:
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      - KeepKeys:
          keep_keys: ["image", "gt_text", "gt_kernels", "mask"] # the order of the dataloader list
  loader:
    shuffle: True
    drop_last: False
    batch_size_per_card: 8
    num_workers: 8

Eval:
  dataset:
    name: SimpleDataSet
    label_file_list:
      - .../文本检测数据集1/val_label.txt
      - .../文本检测数据集2/val_label.txt
      - .../文本检测数据集3/val_label.txt
    ratio_list: 1.0
    transforms:
      - DecodeImage: # load image
          img_mode: RGB
          channel_first: False
      - DetLabelEncode: # Class handling label
          ignore_txt: ["###", "#####"]  # ["*", "###"]
      - DetResizeForTest:
#           image_shape: [736, 1280]
          limit_side_len: 736
          limit_type: "min"
      - ToTensor: # 包含/255、ToCHWImage、ToTensor功能
      - Normalize:
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      - KeepKeys:
          keep_keys: ["image", "shape", "polys", "ignore_tags"]
  loader:
    shuffle: False
    drop_last: False
    batch_size_per_card: 1 # must be 1
    num_workers: 4